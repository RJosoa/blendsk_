security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: auto
      cost: 15

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      pattern: ^/
      lazy: true
      provider: app_user_provider
      form_login:
        login_path: login
        check_path: login
        default_target_path: admin_users_list
      logout:
        path: /logout

    api_login:
      stateless: true
      pattern: ^api/login
      json_login:
        check_path: api/login
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    # api_login:
    #   pattern: ^/api/login
    #   stateless: true
    #   json_login:
    #     check_path: /api/login
    #     success_handler: lexik_jwt_authentication.handler.authentication_success
    #     failure_handler: lexik_jwt_authentication.handler.authentication_failure



    api:
      pattern: ^/api
      stateless: true
      provider: app_user_provider
      jwt: ~

  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/logout, roles: PUBLIC_ACCESS }
    - { path: ^/register, roles: PUBLIC_ACCESS }
    - { path: ^/explorer, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/api/login, roles: ROLE_ADMIN }
    - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
    # - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    # - { path: ^/api/users, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Pour les tests (bcrypt)
        time_cost: 3 # Pour Argon2
        memory_cost: 10 # Pour Argon2
